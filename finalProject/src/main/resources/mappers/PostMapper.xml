<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="finalProject.mapper.PostMapper">

    <sql id="postBaseColumns">
        POST_NUM, POST_AUTHOR, CATEGORY, POST_SUBJECT, POST_CONTENTS,
        VIEW_COUNT, LIKE_COUNT, POST_TIME
    </sql>

    <insert id="postInsert" parameterType="postDTO">
        insert into post(POST_NUM, POST_AUTHOR, CATEGORY, POST_SUBJECT, POST_CONTENTS,
                         VIEW_COUNT, LIKE_COUNT, POST_TIME)
        values ( #{postNum}, #{postAuthor}, #{category}
               , #{postSubject}, #{postContents}, 0, 0, sysdate)
    </insert>

    <select id="findAuthorIdByPostNum" resultType="String">
        select m.MEMBER_ID AS postAuthor
        from POST p
        join MEMBER m on p.POST_AUTHOR = m.MEMBER_NUM
        where p.POST_NUM = #{postNum}
    </select>

    <select id="postSelectList" resultType="postDTO" parameterType="startEndPageDTO">
        SELECT *
        FROM (
        SELECT ROW_NUMBER() OVER (ORDER BY p.POST_NUM) AS rn,
        p.POST_NUM AS postNum,
        p.CATEGORY AS category,
        p.POST_SUBJECT AS postSubject,
        m.NICKNAME AS postAuthor,  <!-- 작성자 닉네임으로 받아오기 -->
        p.POST_CONTENTS AS postContents,
        p.VIEW_COUNT AS viewCount,
        p.LIKE_COUNT AS likeCount,
        p.POST_TIME AS postTime
        FROM post p
        JOIN member m ON p.POST_AUTHOR = m.MEMBER_NUM
        <where>
            <if test="searchWord != null">
                (
                m.NICKNAME LIKE '%' || #{searchWord} || '%' OR
                p.POST_SUBJECT LIKE '%' || #{searchWord} || '%' OR
                p.CATEGORY LIKE '%' || #{searchWord} || '%'
                )
            </if>
        </where>
        )
        WHERE rn BETWEEN #{startRow} AND #{endRow}
    </select>

    <select id="postCount" resultType="integer">
        select count(*)
        from post
    </select>

    <select id="postSelectOne" parameterType="string" resultType="postDTO">
        select
        <include refid="postBaseColumns"/>,
        m.NICKNAME AS postAuthor <!-- 작성자 닉네임으로 받아오기 -->
        from post p
        join member m on p.POST_AUTHOR = m.MEMBER_NUM
        where p.POST_NUM = #{postNum}
    </select>

    <update id="postUpdate" parameterType="postDTO">
        update post
        set POST_NUM      = #{postNum},
            CATEGORY      = #{category},
            POST_SUBJECT  = #{postSubject},
            POST_CONTENTS = #{postContents}

        where POST_NUM = #{postNum}
    </update>

    <delete id="deleteCommentsByPostNum" parameterType="string">
        DELETE FROM "COMMENT"
        WHERE POST_NUM = #{postNum}
    </delete>

    <delete id="deletePostLikesByPostNum" parameterType="string">
        DELETE FROM post_like
        WHERE POST_NUM = #{postNum}
    </delete>

    <delete id="deletePostByPostNum" parameterType="string">
        DELETE FROM post
        WHERE POST_NUM = #{postNum}
    </delete>

    <update id="postViewCountUpdate" parameterType="string">
        update post
        set VIEW_COUNT = VIEW_COUNT + 1
        where POST_NUM = #{postNum}
    </update>

</mapper>